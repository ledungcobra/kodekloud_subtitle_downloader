WEBVTT

1
00:00:00.350 --> 00:00:02.270
Let's look at NFS now.

2
00:00:02.700 --> 00:00:08.350
Unlike the block devices we have seen so far,
NFS does not store data in blocks.

3
00:00:08.770 --> 00:00:11.850
Instead, it saves data in the form of files.

4
00:00:12.550 --> 00:00:15.370
NFS works on a server-client model.

5
00:00:15.900 --> 00:00:20.550
To illustrate this, let's take the example
of a software repository server.

6
00:00:21.100 --> 00:00:26.370
the directory /software/repos exists
on the repository server.

7
00:00:27.020 --> 00:00:32.470
This directory is then shared over the network
using an NFS to the clients which,

8
00:00:32.470 --> 00:00:34.700
in this case, are employee laptops.

9
00:00:35.670 --> 00:00:41.170
The data you see on your laptop may not
physically reside on any of the attached disks.

10
00:00:41.770 --> 00:00:43.500
However, once mounted,

11
00:00:43.670 --> 00:00:47.700
it can be used as any other file system
in the operating system.

12
00:00:48.150 --> 00:00:52.200
The term for directory sharing
in NFS is called exporting.

13
00:00:54.220 --> 00:00:58.750
We will not get into the NFL server
and client configuration in detail.

14
00:00:59.220 --> 00:01:02.050
Still, it is important to understand
how it works.

15
00:01:02.650 --> 00:01:09.950
The NFS server maintains an export
configuration file at /etc/exports

16
00:01:10.370 --> 00:01:14.700
that define the clients which should be able
to access the directories on the server.

17
00:01:15.470 --> 00:01:22.150
Assume that the clients have
a network IP of 10.61.35.201,

18
00:01:22.470 --> 00:01:26.070
10.61.35.202

19
00:01:26.320 --> 00:01:30.070
and 10.61.35.203,

20
00:01:30.870 --> 00:01:36.700
and the NFS server has an IP of 10.61.112.101.

21
00:01:37.370 --> 00:01:40.220
The most straightforward
export configuration

22
00:01:40.220 --> 00:01:43.420
on the NFS servers configuration
looks like this.

23
00:01:44.270 --> 00:01:47.220
This is followed by the hostnames
of all the clients.

24
00:01:48.100 --> 00:01:52.270
The hostnames can be replaced
by IP or a network range

25
00:01:52.500 --> 00:01:55.150
or can also use a wildcard asterisk

26
00:01:55.150 --> 00:01:59.850
should you want no limitations to the clients
that can see this network file share.

27
00:02:00.750 --> 00:02:02.300
In an ideal situation,

28
00:02:02.300 --> 00:02:06.850
there would be a network firewall
between the NFS server and the clients.

29
00:02:07.420 --> 00:02:10.820
As a result, specific ports may
have to be opened

30
00:02:10.820 --> 00:02:14.450
between the server and the clients
for the NFS solution to work.

31
00:02:16.720 --> 00:02:21.770
Once the /etc/exports file has
been updated on the server,

32
00:02:22.170 --> 00:02:26.650
the directory is shared to the clients
by using the export-fs command.

33
00:02:27.400 --> 00:02:29.500
Exportfs-a command

34
00:02:29.850 --> 00:02:34.920
exports all the mounts defined
in the /etc/exports file.

35
00:02:35.970 --> 00:02:40.820
Exportfs-0 allows us
to manually export a directory.

36
00:02:41.650 --> 00:02:45.700
Once exported, you should be able
to mount it on a local directory

37
00:02:45.700 --> 00:02:52.720
such as /mnt/software/repos using
the mount command on the client side.

38
00:02:53.220 --> 00:02:56.820
Make a note of the source file system used
in the mount command.

39
00:02:57.300 --> 00:03:00.850
It is the IP or a hostname of the NFS server

40
00:03:00.850 --> 00:03:05.820
followed by the directory on the server
that we exported separated by a colon.

41
00:03:06.820 --> 00:03:09.900
The network share should now
be mounted on the clients.

42
00:03:10.470 --> 00:03:14.170
There are several other options available
with the exportfs command.

43
00:03:14.650 --> 00:03:18.700
However, this should be sufficient
to get you started with NFS.

44
00:03:20.670 --> 00:03:24.670
Let's head over to the labs and practice
working with an NFS.
