WEBVTT

1
00:00:00.960 --> 00:00:02.310
-In this section,

2
00:00:02.320 --> 00:00:05.720
we will learn about some
of the basic commands in Linux

3
00:00:05.890 --> 00:00:10.620
specifically related to navigation
and creating new files and directories.

4
00:00:11.200 --> 00:00:15.220
We will do this by completing a simple task
using the Linux shell.

5
00:00:16.240 --> 00:00:19.600
Our goal is to create a directory structure.

6
00:00:20.520 --> 00:00:26.350
The top most directory, which is /home/Michael,
is already created,

7
00:00:26.630 --> 00:00:28.200
as it is the home directory,

8
00:00:28.640 --> 00:00:31.760
but everything else underneath
has to be created.

9
00:00:32.660 --> 00:00:33.260
First,

10
00:00:33.300 --> 00:00:38.270
we have to create four new directories
under slash home slash Michael.

11
00:00:38.720 --> 00:00:41.700
These directory names
represent the continents,

12
00:00:41.920 --> 00:00:42.640
Asia,

13
00:00:42.840 --> 00:00:43.330
Europe,

14
00:00:43.700 --> 00:00:44.600
Africa

15
00:00:44.680 --> 00:00:45.490
and America.

16
00:00:46.400 --> 00:00:49.870
Under each continent,
there is at least one country

17
00:00:50.180 --> 00:00:52.910
and under some countries, there is a city.

18
00:00:53.730 --> 00:00:57.150
Each item in this diagram
represents a directory.

19
00:01:00.240 --> 00:01:01.730
Let's start from the beginning.

20
00:01:02.230 --> 00:01:05.810
Once we log into the shell
as the user called Michael,

21
00:01:06.000 --> 00:01:08.630
we would be in the home directory by default,

22
00:01:08.990 --> 00:01:11.400
which is /home/Michael.

23
00:01:12.180 --> 00:01:15.200
To validate that you are in fact,
in the home directory,

24
00:01:15.590 --> 00:01:17.500
run the PWD

25
00:01:17.570 --> 00:01:20.530
or the present working directory
command.

26
00:01:21.200 --> 00:01:24.340
This should print the present directory
you are on.

27
00:01:24.740 --> 00:01:26.850
If you have just opened the terminal,

28
00:01:26.910 --> 00:01:31.860
the directory should be /home/
followed by the username,

29
00:01:32.080 --> 00:01:34.060
which in this case is Michael.

30
00:01:34.890 --> 00:01:37.090
To see the contents of this directory,

31
00:01:37.300 --> 00:01:39.380
run the LS command.

32
00:01:39.800 --> 00:01:41.110
If nothing is printed,

33
00:01:41.330 --> 00:01:43.670
it means the home directory is empty.

34
00:01:44.810 --> 00:01:49.200
Our next task is to create the directories
representing the continents

35
00:01:49.200 --> 00:01:50.410
in the current directory.

36
00:01:51.160 --> 00:01:52.020
To do this,

37
00:01:52.080 --> 00:01:54.980
we will make use of the MKDIR

38
00:01:55.060 --> 00:01:57.090
or make directory command.

39
00:01:57.670 --> 00:01:58.780
With this command,

40
00:01:58.920 --> 00:02:01.330
we will provide arguments for the continent,

41
00:02:01.660 --> 00:02:04.220
either one at a time or altogether.

42
00:02:05.070 --> 00:02:07.100
Once the directories are created,

43
00:02:07.200 --> 00:02:12.210
we can run an LS command again
to verify that they have been created.

44
00:02:14.970 --> 00:02:17.530
Next, let us create the countries.

45
00:02:18.120 --> 00:02:19.440
One way to do this

46
00:02:19.440 --> 00:02:22.400
is to change directory
from the home directory

47
00:02:22.470 --> 00:02:25.220
to one of the directories
representing a continent,

48
00:02:25.550 --> 00:02:26.450
such as Asia,

49
00:02:26.850 --> 00:02:28.770
and then create the directory.

50
00:02:29.690 --> 00:02:32.310
Running the PWD command again

51
00:02:32.370 --> 00:02:34.880
will show us that
the current working directory

52
00:02:34.880 --> 00:02:41.150
has changed from the home directory
to /home/Michael/Asia.

53
00:02:42.020 --> 00:02:46.350
Next, we can create the directory
called China and India

54
00:02:46.440 --> 00:02:50.490
using the MKDIR command that we used before.

55
00:02:51.150 --> 00:02:52.340
Once this is done,

56
00:02:52.530 --> 00:02:56.940
we can either choose to create the rest
of the countries in other continents

57
00:02:57.210 --> 00:03:00.590
or create the city
inside the country directory,

58
00:03:00.860 --> 00:03:02.410
wherever it is applicable.

59
00:03:03.290 --> 00:03:04.460
From the diagram,

60
00:03:04.460 --> 00:03:08.630
we know that India has a city directory
called Mumbai.

61
00:03:09.130 --> 00:03:12.100
We can do this by changing directory to India

62
00:03:12.230 --> 00:03:15.340
and then running the MKDIR command

63
00:03:15.710 --> 00:03:18.050
or use another way to do this.

64
00:03:19.020 --> 00:03:23.180
This can also be done
by running the MKDIR command

65
00:03:23.360 --> 00:03:26.510
with the argument India/Mumbai.

66
00:03:27.390 --> 00:03:31.470
This command effectively creates
the directory called Mumbai

67
00:03:31.520 --> 00:03:34.910
without having to go inside
the directory called India.

68
00:03:35.730 --> 00:03:39.160
If you wanted to create
the directory called Mumbai

69
00:03:39.160 --> 00:03:43.190
without having to create
the directory called India first,

70
00:03:43.460 --> 00:03:52.270
you can run the MKDIR with the -p option
followed by India/Mumbai.

71
00:03:52.820 --> 00:03:57.280
This command option
allows the creation of parent directories

72
00:03:57.290 --> 00:04:00.400
and hence creates both the directory
called India

73
00:04:00.540 --> 00:04:03.690
and then the directory called Mumbai
under it.

74
00:04:06.690 --> 00:04:12.040
Now, let's see how to go up a directory
to /home/Michael,

75
00:04:12.050 --> 00:04:13.630
from the directory we are in,

76
00:04:13.860 --> 00:04:15.400
which is called Asia.

77
00:04:15.640 --> 00:04:16.460
To do this,

78
00:04:16.470 --> 00:04:20.160
we can run the CD command followed by two dots,

79
00:04:20.430 --> 00:04:23.850
or you can run the CD command
without arguments,

80
00:04:23.940 --> 00:04:27.550
which will automatically change
the directory to the home directory

81
00:04:27.870 --> 00:04:30.000
from any location in the system.

82
00:04:30.800 --> 00:04:35.540
You can also run CD followed
by the complete path of the directory,

83
00:04:35.670 --> 00:04:38.730
which is /home/Michael.

84
00:04:39.660 --> 00:04:44.640
We can now create the rest of the directories
using the same steps as before.

85
00:04:45.560 --> 00:04:48.960
Bob follows this example task
in his own laptop

86
00:04:49.120 --> 00:04:51.670
and is able to create
the directory structure

87
00:04:51.670 --> 00:04:52.880
in his home directory,

88
00:04:53.200 --> 00:04:56.060
which is /home/Bob.

89
00:04:58.940 --> 00:05:00.850
He clicks on the next topic.

90
00:05:02.100 --> 00:05:06.230
Now that you are familiar with navigating
through directories and Linux

91
00:05:06.260 --> 00:05:09.830
and commands such as PWD and CD,

92
00:05:10.120 --> 00:05:14.960
it is a good time to talk
about absolute path and relative path.

93
00:05:15.830 --> 00:05:17.250
Consider an example

94
00:05:17.250 --> 00:05:22.380
where the user is in the home directory
at the path /home/Michael

95
00:05:22.750 --> 00:05:25.660
and wanted to go to the directory called Asia.

96
00:05:26.180 --> 00:05:27.790
He could do it two ways.

97
00:05:28.190 --> 00:05:29.170
The first way,

98
00:05:29.230 --> 00:05:32.280
is to specify the complete path
to the directory,

99
00:05:32.670 --> 00:05:34.530
all the way from the root directory,

100
00:05:35.060 --> 00:05:39.650
which would be /home/Michael/Asia.

101
00:05:40.460 --> 00:05:43.940
This is an example
of an absolute path in Linux.

102
00:05:44.580 --> 00:05:48.460
The absolute path
is the location of a file or directory

103
00:05:48.460 --> 00:05:50.460
starting from the root directory.

104
00:05:51.130 --> 00:05:54.370
The root directory is denoted by a slash.

105
00:05:54.660 --> 00:05:57.920
This directory
is the top-most directory in Linux

106
00:05:58.110 --> 00:06:01.980
and all other directories
such as home, reside, beneath it.

107
00:06:02.970 --> 00:06:04.210
In the example here,

108
00:06:04.220 --> 00:06:07.810
the absolute path is /home/Michael.

109
00:06:08.250 --> 00:06:12.820
The relative path is the path in relation
to the present working directory.

110
00:06:13.520 --> 00:06:17.950
An example of a relative path
is when we move from the home directory,

111
00:06:18.190 --> 00:06:19.980
/home/Michael,

112
00:06:20.210 --> 00:06:22.160
to the directory called Asia

113
00:06:22.440 --> 00:06:24.880
by just running CD Asia,

114
00:06:25.120 --> 00:06:29.440
instead of specifying the entire path
starting from the root directory.

115
00:06:32.400 --> 00:06:37.860
An alternative to the CD or change directory
is the PUSHD command.

116
00:06:38.580 --> 00:06:41.500
This command remembers
the current working directory

117
00:06:41.500 --> 00:06:45.530
before changing to the directory
specified in the command argument.

118
00:06:46.050 --> 00:06:47.000
In this example,

119
00:06:47.250 --> 00:06:52.120
we are changing to the directory /etc
from the home directory.

120
00:06:53.030 --> 00:06:56.880
The home directory
is saved to the top of the directory stack.

121
00:06:58.010 --> 00:06:59.280
Once this is done,

122
00:06:59.380 --> 00:07:04.200
the user may change directories
as many times as he wishes in the terminal.

123
00:07:04.750 --> 00:07:07.240
To return back to the original directory,

124
00:07:07.440 --> 00:07:09.770
which in this case is the home directory,

125
00:07:10.130 --> 00:07:12.430
use the POPD command.

126
00:07:13.430 --> 00:07:18.740
You can push multiple such directories down
and then pop back when required.

127
00:07:19.370 --> 00:07:21.220
When you run POPD,

128
00:07:21.390 --> 00:07:24.600
the last pushed directory comes out first.

129
00:07:25.210 --> 00:07:27.600
"I will definitely have to try that out."

130
00:07:28.060 --> 00:07:30.960
Bob thinks and navigates to the next section.

131
00:07:33.880 --> 00:07:37.360
Now let us look at some more
basic commands in Linux.

132
00:07:37.810 --> 00:07:39.330
To learn these commands,

133
00:07:39.360 --> 00:07:43.050
we will make use
of the same directory structure as before.

134
00:07:43.270 --> 00:07:44.000
However,

135
00:07:44.080 --> 00:07:47.250
now there are some new files
and directories added,

136
00:07:47.340 --> 00:07:48.900
as shown in the diagram.

137
00:07:49.710 --> 00:07:51.200
The goal of this task

138
00:07:51.260 --> 00:07:56.490
is to make sure that the directory structure
looks like the diagram on the right in the end.

139
00:07:59.410 --> 00:08:01.700
If you look at the diagram on the left,

140
00:08:01.880 --> 00:08:04.080
you will notice a couple of mistakes.

141
00:08:04.390 --> 00:08:09.770
The directory called Morocco
has been created in Europe instead of Africa.

142
00:08:10.150 --> 00:08:11.460
This has to be corrected.

143
00:08:12.180 --> 00:08:14.390
There is another correction to be made.

144
00:08:14.610 --> 00:08:18.630
The city called Mumbai has a typo
that needs to be fixed.

145
00:08:19.070 --> 00:08:24.070
There is a file called city.txt
under the Mumbai directory.

146
00:08:24.350 --> 00:08:28.350
The exact same file has to be copied
to the Cairo directory.

147
00:08:29.300 --> 00:08:33.870
We also want to remove
the file called Tottenham.txt

148
00:08:33.870 --> 00:08:35.870
from the directory called London.

149
00:08:38.790 --> 00:08:40.170
Just like before,

150
00:08:40.250 --> 00:08:42.890
let's do this task one step at a time.

151
00:08:43.350 --> 00:08:43.960
First,

152
00:08:44.000 --> 00:08:48.160
let's move the directory called Morocco
from Europe to Africa.

153
00:08:48.750 --> 00:08:52.120
To do this, we will make use of the MV command.

154
00:08:52.530 --> 00:08:55.110
This command requires two arguments.

155
00:08:55.240 --> 00:08:58.530
The first argument is the source file
or directory,

156
00:08:58.770 --> 00:09:01.920
and the second argument
is the destination directory

157
00:09:02.140 --> 00:09:03.880
where we want to be moved.

158
00:09:04.610 --> 00:09:06.310
Using absolute path,

159
00:09:06.430 --> 00:09:15.040
this can be done easily using the command
MV /home/Michael/Europe/Morocco

160
00:09:15.630 --> 00:09:17.370
followed by the second argument,

161
00:09:17.550 --> 00:09:23.310
which is the destination directory,
/home/Michael/Africa.

162
00:09:24.230 --> 00:09:27.870
This will move the directory
from Europe to Africa.

163
00:09:30.720 --> 00:09:34.590
You can also use
the relative path to achieve this,

164
00:09:35.040 --> 00:09:36.170
but before you do,

165
00:09:36.400 --> 00:09:39.140
please be aware
of your present working directory.

166
00:09:39.840 --> 00:09:43.320
If you are currently
in the user Michael's home directory,

167
00:09:43.650 --> 00:09:49.870
then you can exclude /home/Michael
from the source and destination paths.

168
00:09:50.370 --> 00:09:54.860
Going forward, we will simply use
relative path for all commands,

169
00:09:55.010 --> 00:09:58.400
assuming we are
in the user Michael's home directory.

170
00:09:59.350 --> 00:10:00.310
Moving along,

171
00:10:00.400 --> 00:10:04.430
let's now fix the typo in the name
of the directory called Mumbai.

172
00:10:04.990 --> 00:10:09.470
We can do this by running
the same MV command as before.

173
00:10:10.000 --> 00:10:12.390
Use MV as shown here.

174
00:10:12.710 --> 00:10:16.260
The first argument is the directory,
which has to be renamed,

175
00:10:16.620 --> 00:10:21.670
and the second argument is the relative path
to the correct directory name.

176
00:10:22.130 --> 00:10:23.360
Once this is run,

177
00:10:23.510 --> 00:10:25.600
the directory will be renamed.

178
00:10:28.660 --> 00:10:31.940
On to the next task of this sample exercise.

179
00:10:32.420 --> 00:10:38.550
We need to copy the city.txt file
located under the directory called Mumbai

180
00:10:38.800 --> 00:10:40.960
to the directory called Cairo.

181
00:10:41.650 --> 00:10:45.190
To do this, we will make use of the CP command.

182
00:10:45.650 --> 00:10:50.400
Similar to MV,
this command also expects two arguments.

183
00:10:50.680 --> 00:10:54.030
The first argument is the source file
or directory.

184
00:10:54.390 --> 00:10:57.230
The second argument is the destination.

185
00:10:57.580 --> 00:11:02.230
This will copy the file from
the Mumbai directory to the destination,

186
00:11:02.510 --> 00:11:04.120
which is the Cairo directory.

187
00:11:07.410 --> 00:11:08.140
Finally,

188
00:11:08.200 --> 00:11:14.110
to delete the file called Tottenham.txt
from the directory called London,

189
00:11:14.420 --> 00:11:18.650
we will use the RM command
followed by the file name.

190
00:11:20.280 --> 00:11:27.260
Before we move on, make a note that to copy
or delete a directory using CP or RM,

191
00:11:27.440 --> 00:11:30.660
you would have to make use of the -r option.

192
00:11:31.000 --> 00:11:34.290
This option stands for recursive operation.

193
00:11:37.270 --> 00:11:40.950
Time to learn some more commands
through another task.

194
00:11:41.300 --> 00:11:45.850
This time we will see how to create a file
and add data to it.

195
00:11:46.360 --> 00:11:52.980
Let's first see how to read the contents
of the file city.txt in the Mumbai directory.

196
00:11:53.790 --> 00:11:58.060
The simplest way to do this
is by using the CAT command.

197
00:11:58.350 --> 00:12:01.340
Run the cat or concatenate command

198
00:12:01.540 --> 00:12:03.400
with the file name as the argument

199
00:12:03.520 --> 00:12:07.480
and the contents, if any,
will be printed on the screen.

200
00:12:08.120 --> 00:12:13.840
In this case, the city.txt file
has a single word, Mumbai, in it.

201
00:12:14.230 --> 00:12:17.450
You can also add data to the file using cat.

202
00:12:18.000 --> 00:12:19.160
Since it's a copy,

203
00:12:19.270 --> 00:12:26.410
the city.txt file under the Cairo directory
also contains the single word Mumbai in it.

204
00:12:27.140 --> 00:12:28.690
To replace this data,

205
00:12:28.760 --> 00:12:32.030
use the cat command
and the redirection symbol,

206
00:12:32.230 --> 00:12:36.250
which is the forward arrow symbol
followed by the file name.

207
00:12:37.040 --> 00:12:38.900
Once this command is issued,

208
00:12:38.960 --> 00:12:41.370
the prompt will wait for a user input.

209
00:12:42.090 --> 00:12:44.630
You would be able to add lines of text.

210
00:12:45.200 --> 00:12:48.710
Use the enter key
to type into a new line of text

211
00:12:48.730 --> 00:12:54.690
and key in control plus D to exit out
of this prompt and save data to the file.

212
00:12:55.480 --> 00:13:01.220
Finally, what if you want to create
an empty file called country.txt

213
00:13:01.220 --> 00:13:03.450
under the directory called China?

214
00:13:04.290 --> 00:13:08.690
One very simple way to do this
is to make use of the touch command.

215
00:13:09.450 --> 00:13:11.460
Use the command called touch

216
00:13:11.480 --> 00:13:20.100
and argument
/home/Michael/Asia/China/country.txt.

217
00:13:20.780 --> 00:13:25.240
This will create a new empty file
called country.txt

218
00:13:25.500 --> 00:13:27.120
under the China directory.

219
00:13:27.780 --> 00:13:31.120
There are other ways
to redirect data into a file.

220
00:13:31.420 --> 00:13:34.940
We will cover these in chapter two
of the quick start guide.

221
00:13:37.810 --> 00:13:41.280
You can also see the data in a file
using pagers

222
00:13:41.310 --> 00:13:43.960
such as the more and the less command.

223
00:13:44.320 --> 00:13:49.010
With the more command, you can view text files
in a scrollable manner.

224
00:13:49.210 --> 00:13:52.440
You can scroll back one
or more screens at a time

225
00:13:52.530 --> 00:13:56.260
and can also search for a pattern of text
within the file.

226
00:13:56.950 --> 00:14:01.060
To scroll down one screen full of data,
use the space bar.

227
00:14:01.510 --> 00:14:04.140
To scroll one line, use enter.

228
00:14:05.130 --> 00:14:08.980
Use the letter B to scroll back
one screen at a time

229
00:14:09.350 --> 00:14:12.090
and the backslash to search for a pattern.

230
00:14:12.660 --> 00:14:14.920
Use the Q key to exit out.

231
00:14:15.950 --> 00:14:19.370
More, loads the entire file at once,

232
00:14:19.390 --> 00:14:23.200
and is not the best choice
when dealing with large files.

233
00:14:23.520 --> 00:14:24.850
Similar to more,

234
00:14:24.950 --> 00:14:28.520
the less command allows you
to view the contents of a file

235
00:14:28.540 --> 00:14:30.220
and navigate through the file.

236
00:14:31.270 --> 00:14:33.100
Besides the options here,

237
00:14:33.190 --> 00:14:36.180
there are several powerful text editors
out there

238
00:14:36.180 --> 00:14:41.680
that are commonly used for reading, writing,
and manipulating data in a file.

239
00:14:42.200 --> 00:14:46.240
We have a separate section dedicated to this
later in this guide.

240
00:14:49.060 --> 00:14:53.550
We saw earlier that the LS
or list storage command

241
00:14:53.780 --> 00:14:58.490
is useful to list the continents
of a directory in the Linux file system.

242
00:14:59.070 --> 00:15:01.800
That is one basic usage of the command.

243
00:15:02.330 --> 00:15:03.750
To get more details,

244
00:15:03.770 --> 00:15:08.780
use the long list which is LS followed by a -l.

245
00:15:09.410 --> 00:15:13.560
This command provides more details
about the files and directories

246
00:15:13.640 --> 00:15:15.480
such as the access modes,

247
00:15:15.640 --> 00:15:16.270
ownership,

248
00:15:16.660 --> 00:15:18.690
the last accessed time,

249
00:15:18.780 --> 00:15:19.410
et cetera.

250
00:15:20.440 --> 00:15:24.100
Don't worry if these terms are new to you,
they will be covered later.

251
00:15:24.960 --> 00:15:31.690
In Linux, a hidden file or directory,
can be viewed by using the ls -a command.

252
00:15:32.050 --> 00:15:38.120
The hidden files and directories
are preceded by a single dot or a full stop.

253
00:15:39.170 --> 00:15:41.780
When you run an ls -a,

254
00:15:41.900 --> 00:15:46.550
you will notice two files represented
by a dot and double dots.

255
00:15:47.110 --> 00:15:50.530
The single dot refers
to the current working directory

256
00:15:50.840 --> 00:15:54.810
and the double dot refers to the directory
in the file system

257
00:15:54.820 --> 00:15:57.900
which is above
or before the current directory.

258
00:15:58.650 --> 00:16:01.850
We saw this briefly
when working with CD command,

259
00:16:02.670 --> 00:16:06.500
cd.. takes you to the previous directory,

260
00:16:06.870 --> 00:16:10.660
while cd. does not change the directory,

261
00:16:10.810 --> 00:16:13.450
as it refers
to the current working directory.

262
00:16:14.620 --> 00:16:15.380
Finally,

263
00:16:15.430 --> 00:16:19.970
if you want to list all the files based
on the order they were modified,

264
00:16:20.160 --> 00:16:23.140
you can use ls -lt.

265
00:16:23.650 --> 00:16:27.750
To do the reverse and print files
from oldest to newest,

266
00:16:27.820 --> 00:16:31.100
use the ls -ltr command.
